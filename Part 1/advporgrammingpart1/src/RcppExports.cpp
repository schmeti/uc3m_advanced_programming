// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// value_count
double value_count(CharacterVector vec, const std::string& target);
RcppExport SEXP _advporgrammingpart1_value_count(SEXP vecSEXP, SEXP targetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type vec(vecSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type target(targetSEXP);
    rcpp_result_gen = Rcpp::wrap(value_count(vec, target));
    return rcpp_result_gen;
END_RCPP
}
// gini_impurity_c
double gini_impurity_c(CharacterVector left, CharacterVector right);
RcppExport SEXP _advporgrammingpart1_gini_impurity_c(SEXP leftSEXP, SEXP rightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type left(leftSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type right(rightSEXP);
    rcpp_result_gen = Rcpp::wrap(gini_impurity_c(left, right));
    return rcpp_result_gen;
END_RCPP
}
// best_split_c
List best_split_c(DataFrame X, List features, CharacterVector y);
RcppExport SEXP _advporgrammingpart1_best_split_c(SEXP XSEXP, SEXP featuresSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type X(XSEXP);
    Rcpp::traits::input_parameter< List >::type features(featuresSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(best_split_c(X, features, y));
    return rcpp_result_gen;
END_RCPP
}
// fit_decision_stump_c
void fit_decision_stump_c(DataFrame X, List features, CharacterVector y);
RcppExport SEXP _advporgrammingpart1_fit_decision_stump_c(SEXP XSEXP, SEXP featuresSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type X(XSEXP);
    Rcpp::traits::input_parameter< List >::type features(featuresSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type y(ySEXP);
    fit_decision_stump_c(X, features, y);
    return R_NilValue;
END_RCPP
}
// value_count_v2
double value_count_v2(CharacterVector vec, const std::string& target);
RcppExport SEXP _advporgrammingpart1_value_count_v2(SEXP vecSEXP, SEXP targetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type vec(vecSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type target(targetSEXP);
    rcpp_result_gen = Rcpp::wrap(value_count_v2(vec, target));
    return rcpp_result_gen;
END_RCPP
}
// gini_impurity_c_v2
double gini_impurity_c_v2(CharacterVector left, CharacterVector right);
RcppExport SEXP _advporgrammingpart1_gini_impurity_c_v2(SEXP leftSEXP, SEXP rightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type left(leftSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type right(rightSEXP);
    rcpp_result_gen = Rcpp::wrap(gini_impurity_c_v2(left, right));
    return rcpp_result_gen;
END_RCPP
}
// best_split_c_v2
List best_split_c_v2(DataFrame X, List features, CharacterVector y);
RcppExport SEXP _advporgrammingpart1_best_split_c_v2(SEXP XSEXP, SEXP featuresSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type X(XSEXP);
    Rcpp::traits::input_parameter< List >::type features(featuresSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(best_split_c_v2(X, features, y));
    return rcpp_result_gen;
END_RCPP
}
// fit_decision_stump_c_v2
void fit_decision_stump_c_v2(DataFrame X, List features, CharacterVector y);
RcppExport SEXP _advporgrammingpart1_fit_decision_stump_c_v2(SEXP XSEXP, SEXP featuresSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type X(XSEXP);
    Rcpp::traits::input_parameter< List >::type features(featuresSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type y(ySEXP);
    fit_decision_stump_c_v2(X, features, y);
    return R_NilValue;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _advporgrammingpart1_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_advporgrammingpart1_value_count", (DL_FUNC) &_advporgrammingpart1_value_count, 2},
    {"_advporgrammingpart1_gini_impurity_c", (DL_FUNC) &_advporgrammingpart1_gini_impurity_c, 2},
    {"_advporgrammingpart1_best_split_c", (DL_FUNC) &_advporgrammingpart1_best_split_c, 3},
    {"_advporgrammingpart1_fit_decision_stump_c", (DL_FUNC) &_advporgrammingpart1_fit_decision_stump_c, 3},
    {"_advporgrammingpart1_value_count_v2", (DL_FUNC) &_advporgrammingpart1_value_count_v2, 2},
    {"_advporgrammingpart1_gini_impurity_c_v2", (DL_FUNC) &_advporgrammingpart1_gini_impurity_c_v2, 2},
    {"_advporgrammingpart1_best_split_c_v2", (DL_FUNC) &_advporgrammingpart1_best_split_c_v2, 3},
    {"_advporgrammingpart1_fit_decision_stump_c_v2", (DL_FUNC) &_advporgrammingpart1_fit_decision_stump_c_v2, 3},
    {"_advporgrammingpart1_rcpp_hello_world", (DL_FUNC) &_advporgrammingpart1_rcpp_hello_world, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_advporgrammingpart1(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
